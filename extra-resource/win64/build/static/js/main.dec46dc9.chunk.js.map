{"version":3,"sources":["ErrorHandling/ErrorBoundary.js","actions/types.js","polyfill.js","App.js","serviceWorker.js","reducers/statusReducer.js","reducers/configReducer.js","reducers/explorerReducer.js","utils/classes/Stack.js","utils/classes/BackStack.js","reducers/explorerStateReducer.js","reducers/providerStatusReducer.js","reducers/userActionsReducer.js","reducers/imagesReducer.js","reducers/versionReducer.js","reducers/mountReducer.js","reducers/index.js","utils/StateLoader.js","throttled.js","store.js","index.js","utils/Constants.js","utils/API/endpoint.js","utils/Tools.js","utils/API/API.js"],"names":["ErrorBoundary","props","state","hasError","error","info","this","setState","className","fluid","lg","sm","href","children","React","Component","FETCH_STATUS","GET_PROVIDERS","GET_VERSION","GET_CONFIG_FOR_REMOTE","GET_REMOTE_LIST","GET_CONFIG_DUMP","GET_FILES_LIST","CHANGE_PATH","CREATE_PATH","REMOVE_PATH","CHANGE_REMOTE_NAME","CHANGE_REMOTE_PATH","NAVIGATE_UP","NAVIGATE_FWD","NAVIGATE_BACK","CHANGE_VISIBILITY_FILTER","CHANGE_GRID_MODE","SIGNOUT_REQUEST","CHANGE_SEARCH_QUERY","GET_REMOTE_ABOUT","SET_BANDWIDTH","GET_BANDWIDTH","ENABLE_STATUS_CHECK","CHANGE_AUTH_KEY","CHANGE_IP_ADDRESS","CHANGE_AXIOS_INTERCEPTOR","CHANGE_LOAD_IMAGES","LOAD_IMAGE","CHANGE_LAYOUT_COLS","ADD_LAYOUT_CONTAINER","REMOVE_LAYOUT_CONTAINER","CHANGE_ACTIVE_REMOTE_CONTAINER","CHANGE_DISTRACTION_FREE_MODE","CHANGE_SORT_FILTER","GET_MOUNT_LIST","REMOVE_MOUNT","CREATE_MOUNT","REQUEST_ERROR","REQUEST_SUCCESS","REQUEST_LOADING","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","lazy","Login","Register","Page404","Page500","App","data-test","Suspense","fallback","exact","path","name","render","Boolean","location","hostname","match","initialState","isConnected","jobs","speed","runningAvgSpeed","checkStatus","bandwidth","providers","configDump","configs","remotes","files","numContainers","containers","activeRemoteContainerID","distractionFreeMode","numCols","Stack","items","count","remoteName","remotePath","item","push","pop","slice","getLength","BackStack","backStack","forwardStack","empty","peek","temp","moveBack","backStacks","currentPaths","visibilityFilters","gridMode","searchQueries","loadImages","sortFilters","sortFiltersAscending","about","auth","authKey","ipAddress","interceptor","arch","decomposed","goVersion","isGit","os","version","currentMounts","mountError","appReducer","combineReducers","status","action","type","curSpeed","payload","cma","Math","trunc","speedArray","elapsedTime","speedAvg","arrLength","length","splice","config","remote","time","Date","filesList","ID","containerID","paneID","filter","lastItem","explorer","id","data","visibilityFilter","searchQuery","sortFilterAscending","sortFilter","indexOf","current","splitPath","split","i","moveForward","mode","providerStatus","user","localStorage","setItem","AUTH_KEY","IP_ADDRESS_KEY","axiosInstance","interceptors","request","eject","interceptorID","use","headers","Authorization","getItem","baseURL","Promise","reject","imageLoader","url","save","isLoading","mount","toast","mountPoints","rootReducer","clear","StateLoader","serializedState","initializeState","JSON","parse","err","newState","stringify","console","Error","throttled","middleware","thunk","getState","dispatch","next","meta","throttle","setTimeout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","stateLoader","store","createStore","loadState","applyMiddleware","subscribe","saveState","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","visibilityFilteringOptions","STATUS_REFRESH_TIMEOUT","NEW_DRIVE_CONFIG_REFRESH_TIMEOUT","MODAL_ROOT_ELEMENT","USER_NAME_KEY","LOGIN_TOKEN","FILES_VIEW_HEIGHT","urls","mkdir","purge","deleteFile","createPublicLink","stats","bwlimit","moveDir","moveFile","copyDir","copyFile","cleanUpRemote","noopAuth","getRcloneVersion","getRcloneMemStats","getOptions","getProviders","getConfigDump","getRunningJobs","getStatusForJob","getConfigForRemote","createConfig","updateConfig","getFsInfo","listRemotes","getFilesList","getAbout","deleteConfig","stopJob","listMounts","createMount","removeMount","unmountAll","isEmpty","obj","Array","isArray","key","hasOwnProperty","bytesToKB","bytes","bytesToGB","formatBytes","decimals","k","dm","sizes","floor","log","parseFloat","pow","toFixed","secondsToStr","seconds","numberEnding","number","years","days","hours","minutes","baseValidator","regex","str","test","validateSizeSuffix","validateInt","validateDuration","validateDriveName","findFromConfig","find","ele","idx","array","Prefix","addColonAtLast","visibilityAssociation","Images","Pdf","changeListVisibility","list","checkList","acceptType","newList","IsDir","MimeType","changeSearchFilter","toLowerCase","Name","includes","isLocalRemoteName","groupByKey","xs","keyGetter","map","Map","forEach","collection","get","set","getSortCompareFunction","ascending","a","b","x","y","Size","ModTime","makeUniqueID","result","characters","charactersLength","charAt","random","axios","create","responseType","performMoveFile","srcFs","srcRemote","dstFs","dstRemote","performCopyOrMoveFile","performCopyFile","_async","splitRes","post"],"mappings":"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","file":"static/js/main.dec46dc9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Col, Container, Row} from \"reactstrap\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hasError: false};\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return {hasError: true};\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        // You can also log the error to an error reporting service\r\n        // logErrorToMyService(error, info);\r\n        // Send error to Rclone backend.\r\n        this.setState({error, info});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return (\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Container fluid={true}>\r\n                        <Row>\r\n                            <Col lg={3} sm={12}/>\r\n                            <Col lg={6} sm={12}>\r\n                                <h3>Something went wrong. </h3>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Try refreshing the page.\r\n                                        If the issue persists, please consider opening a new issue on our Github page.\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Here are some things you can try:<br/>\r\n                                        1. Clear the local storage for this site.<br/>\r\n                                        2. Logout and login again using: <a className=\"btn btn-primary mb-3\"\r\n                                                                            href=\"/#/login\">Logout</a><br/>\r\n                                        3. If the issue persists, please consider opening a new issue on our Github\r\n                                        page.\r\n                                        <a href=\"https://github.com/negative0/rclone-webui-react/issues\"\r\n                                           className=\"btn btn-primary\">\r\n                                            Create new Issue.\r\n                                        </a>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Col>\r\n                            <Col lg={3} sm={12}/>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export const FETCH_STATUS = 'FETCH_STATUS';\r\nexport const GET_PROVIDERS = 'GET_PROVIDERS';\r\nexport const GET_VERSION = 'GET_VERSION';\r\nexport const GET_CONFIG_FOR_REMOTE = 'GET_CONFIG_FOR_REMOTE';\r\nexport const GET_REMOTE_LIST = 'GET_REMOTE_LIST';\r\nexport const GET_CONFIG_DUMP = 'GET_CONFIG_DUMP';\r\nexport const GET_FILES_LIST = 'GET_FILES_LIST';\r\nexport const CHANGE_PATH = 'CHANGE_PATH';\r\nexport const CREATE_PATH = 'CREATE_PATH';\r\nexport const REMOVE_PATH = 'REMOVE_PATH';\r\nexport const CHANGE_REMOTE_NAME = 'CHANGE_REMOTE_NAME';\r\nexport const CHANGE_REMOTE_PATH = 'CHANGE_REMOTE_PATH';\r\nexport const NAVIGATE_UP = 'NAVIGATE_UP';\r\nexport const NAVIGATE_FWD = 'NAVIGATE_FWD';\r\nexport const NAVIGATE_BACK = 'NAVIGATE_BACK';\r\nexport const CHANGE_VISIBILITY_FILTER = 'CHANGE_VISIBILITY_FILTER';\r\nexport const CHANGE_GRID_MODE = 'CHANGE_GRID_MODE';\r\nexport const SIGNOUT_REQUEST = 'SIGNOUT_REQUEST';\r\nexport const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\r\nexport const GET_REMOTE_ABOUT = 'GET_REMOTE_ABOUT';\r\nexport const CREATE_PUBLIC_LINK = 'CREATE_PUBLIC_LINK';\r\nexport const GET_RUNNING_JOBS = 'GET_RUNNING_JOBS';\r\nexport const GET_STATUS_FOR_RUNNING_JOB = 'GET_STATUS_FOR_RUNNING_JOB';\r\nexport const SET_BANDWIDTH = 'SET_BANDWIDTH';\r\nexport const GET_BANDWIDTH = 'GET_BANDWIDTH';\r\nexport const ENABLE_STATUS_CHECK = 'ENABLE_STATUS_CHECK';\r\n// export const CHANGE_USER_NAME_PASSWORD = 'CHANGE_USER_NAME_PASSWORD';\r\nexport const CHANGE_AUTH_KEY = 'CHANGE_AUTH_KEY';\r\nexport const CHANGE_IP_ADDRESS = 'CHANGE_IP_ADDRESS';\r\nexport const CHANGE_AXIOS_INTERCEPTOR = 'CHANGE_AXIOS_INTERCEPTOR';\r\nexport const CHANGE_LOAD_IMAGES = 'CHANGE_LOAD_IMAGES';\r\nexport const LOAD_IMAGE = 'LOAD_IMAGE';\r\nexport const CHANGE_LAYOUT_COLS = 'CHANGE_LAYOUT_COLS';\r\nexport const ADD_LAYOUT_CONTAINER = 'ADD_LAYOUT_CONTAINER';\r\nexport const REMOVE_LAYOUT_CONTAINER = 'REMOVE_LAYOUT_CONTAINER';\r\nexport const CHANGE_ACTIVE_REMOTE_CONTAINER = 'CHANGE_ACTIVE_REMOTE_CONTAINER';\r\nexport const CHANGE_DISTRACTION_FREE_MODE = \"CHANGE_DISTRACTION_FREE_MODE\";\r\nexport const CHANGE_SORT_FILTER = \"CHANGE_SORT_FILTER\";\r\n\r\n\r\nexport const GET_MOUNT_LIST = \"GET_MOUNT_LIST\";\r\nexport const REMOVE_MOUNT = \"REMOVE_MOUNT\";\r\nexport const CREATE_MOUNT = \"CREATE_MOUNT\";\r\n\r\nexport const REQUEST_ERROR = 'ERROR';\r\nexport const REQUEST_SUCCESS = 'SUCCESS';\r\nexport const REQUEST_LOADING = 'LOADING';\r\n","/*\r\n* required polyfills\r\n*/\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol'\r\n// import 'core-js/es6/object'\r\n// import 'core-js/es6/function'\r\n// import 'core-js/es6/parse-int'\r\n// import 'core-js/es6/parse-float'\r\n// import 'core-js/es6/number'\r\n// import 'core-js/es6/math'\r\n// import 'core-js/es6/string'\r\n// import 'core-js/es6/date'\r\nimport 'core-js/es/array'\r\n// import 'core-js/es6/regexp'\r\nimport 'core-js/es/map'\r\n// import 'core-js/es6/weak-map'\r\nimport 'core-js/es/set'\r\nimport 'core-js/es/object'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n    if (typeof window.CustomEvent === \"function\") return false;\r\n\r\n    function CustomEvent(event, params) {\r\n        params = params || {bubbles: false, cancelable: false, detail: undefined};\r\n        var evt = document.createEvent('CustomEvent');\r\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n        return evt;\r\n    }\r\n\r\n    CustomEvent.prototype = window.Event.prototype;\r\n\r\n    window.CustomEvent = CustomEvent;\r\n})();\r\n","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\n// import { renderRoutes } from 'react-router-config';\r\nimport './App.scss';\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ErrorBoundary from \"./ErrorHandling/ErrorBoundary\";\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\n// Containers\r\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\r\n\r\n// Pages\r\nconst Login = React.lazy(() => import('./views/Pages/Login'));\r\nconst Register = React.lazy(() => import('./views/Pages/Register'));\r\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\r\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div data-test=\"appComponent\">\r\n                <ErrorBoundary>\r\n                    <ToastContainer/>\r\n                    <HashRouter>\r\n                        <React.Suspense fallback={loading()}>\r\n                            <Switch>\r\n                                <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>}/>\r\n                                <Route exact path=\"/register\" name=\"Register Page\"\r\n                                       render={props => <Register {...props}/>}/>\r\n                                <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>}/>\r\n                                <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>}/>\r\n                                <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>}/>\r\n                            </Switch>\r\n                        </React.Suspense>\r\n                    </HashRouter>\r\n                </ErrorBoundary>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being sernoopauthved cache-first by a service ' +\r\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n\r\n                            // Execute callback\r\n                            if (config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import {\r\n    ENABLE_STATUS_CHECK,\r\n    FETCH_STATUS,\r\n    GET_BANDWIDTH,\r\n    REQUEST_ERROR,\r\n    REQUEST_SUCCESS,\r\n    SET_BANDWIDTH\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    isConnected: false,\r\n    jobs: {},\r\n    speed: [],\r\n    runningAvgSpeed: 0,\r\n    checkStatus: true,\r\n    bandwidth: {}\r\n};\r\n\r\nconst saveMaxSpeedPoints = 50;\r\n/**\r\n * Specifies reducers for status check of the rclone backend.\r\n * @param state\r\n * @param action\r\n * @returns {({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{isConnected: boolean, error: *})|{checkStatus: boolean, bandwidth: {}, jobs: {}, isConnected: boolean, runningAvgSpeed: number, speed: Array}|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{bandwidth: *})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{jobs: *, isConnected: boolean, runningAvgSpeed: number, speed: *[]})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{checkStatus: *})}\r\n */\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_STATUS:\r\n\r\n            if (action.status === REQUEST_SUCCESS) {\r\n                const curSpeed = action.payload.speed;\r\n                let cma = state.runningAvgSpeed;\r\n                // let totalElements = state.speed.length;\r\n                // if (!totalElements) totalElements = 1;\r\n\r\n                let runningAvgSpeed = Math.trunc((cma + ((curSpeed - cma) / 50)));\r\n                const speedArray = [...state.speed, {\r\n                    elapsedTime: Math.trunc(action.payload.elapsedTime),\r\n                    speed: Math.trunc(action.payload.speed),\r\n                    speedAvg: Math.trunc(runningAvgSpeed)\r\n                }];\r\n                const arrLength = speedArray.length;\r\n                if (arrLength > saveMaxSpeedPoints) {\r\n                    speedArray.splice(0, arrLength - saveMaxSpeedPoints);\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    jobs: action.payload,\r\n                    runningAvgSpeed,\r\n                    speed: speedArray,\r\n                    isConnected: true\r\n                };\r\n            }\r\n            if (action.status === REQUEST_ERROR) {\r\n                return {\r\n                    ...state,\r\n                    error: action.payload,\r\n                    isConnected: false\r\n                };\r\n            }\r\n            break;\r\n        case ENABLE_STATUS_CHECK:\r\n            return {\r\n                ...state,\r\n                checkStatus: action.payload\r\n            };\r\n        case SET_BANDWIDTH:\r\n        case GET_BANDWIDTH:\r\n            return {\r\n                ...state,\r\n                bandwidth: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_CONFIG_DUMP, GET_PROVIDERS, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    providers: [],\r\n    configDump: {},\r\n    hasError: false,\r\n};\r\n/**\r\n * Specifies redux reduce operations for the config module.\r\n * @param state {$ObjMap}\r\n * @param action {$ObjMap}\r\n * @returns {({hasError, providers, configDump}&{providers: *})|({hasError, providers, configDump}&{hasError: boolean, error: *})|({hasError, providers, configDump}&{hasError: boolean, configDump: *})|{hasError: boolean, providers: Array, configDump: {}}}\r\n */\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROVIDERS:\r\n            return {\r\n                ...state,\r\n                providers: action.payload,\r\n            };\r\n\r\n        case GET_CONFIG_DUMP:\r\n            if (action.status === REQUEST_SUCCESS)\r\n                return {\r\n                    ...state,\r\n                    configDump: action.payload,\r\n                    hasError: false\r\n                };\r\n            if (action.status === REQUEST_ERROR)\r\n                return {\r\n                    ...state,\r\n                    hasError: true,\r\n                    error: action.payload\r\n                };\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n\tADD_LAYOUT_CONTAINER,\r\n\tCHANGE_ACTIVE_REMOTE_CONTAINER,\r\n\tCHANGE_DISTRACTION_FREE_MODE,\r\n\tCHANGE_LAYOUT_COLS,\r\n\tGET_CONFIG_FOR_REMOTE,\r\n\tGET_FILES_LIST,\r\n\tGET_REMOTE_LIST,\r\n\tREMOVE_LAYOUT_CONTAINER,\r\n\tREQUEST_ERROR,\r\n\tREQUEST_SUCCESS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\tconfigs: {},\r\n\tremotes: [],\r\n\tfiles: {},\r\n\thasError: false,\r\n\tnumContainers: 0,\r\n\tcontainers: [],\r\n\tactiveRemoteContainerID: {},\r\n\tdistractionFreeMode: false,\r\n\tnumCols: 1\r\n};\r\n/**\r\n * Specifies the explorer specific reducers for the redux actions.\r\n * @param state\r\n * @param action\r\n * @returns {{configs: {}, remotes: Array, files: {}, hasError: boolean}|({configs, remotes, files, hasError}&{files: (initialState.files|{})})|({configs, remotes, files, hasError}&{files: (initialState.files|{}), hasError: boolean})|({configs, remotes, files, hasError}&{hasError: boolean, error: *})|({configs, remotes, files, hasError}&{configs: ((initialState.configs&*)|({}&*)), hasError: boolean})|({configs, remotes, files, hasError}&{remotes: *, hasError: boolean})}\r\n */\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CONFIG_FOR_REMOTE:\r\n            if (action.status === REQUEST_SUCCESS)\r\n                return {\r\n                    ...state,\r\n                    configs: {...state.configs, ...action.payload},\r\n                    hasError: false\r\n                };\r\n            if (action.status === REQUEST_ERROR)\r\n                return {\r\n                    ...state,\r\n                    error: action.payload,\r\n                    hasError: true\r\n                };\r\n            break;\r\n        case GET_REMOTE_LIST:\r\n            if (action.status === REQUEST_SUCCESS)\r\n                return {\r\n                    ...state,\r\n                    remotes: action.payload,\r\n                    hasError: false\r\n                };\r\n            if (action.status === REQUEST_ERROR)\r\n                return {\r\n                    ...state,\r\n                    error: action.payload,\r\n                    hasError: true\r\n                };\r\n            break;\r\n        case GET_FILES_LIST:\r\n            if (action.status === REQUEST_SUCCESS) {\r\n                return {\r\n                    ...state,\r\n                    files: {...state.files, [action.payload.path]: {time: new Date(), files: action.payload.filesList}},\r\n                    hasError: false\r\n                }\r\n            }\r\n            if (action.status === REQUEST_ERROR)\r\n                return {\r\n                    ...state,\r\n\t\t\t\t\tfiles: {\r\n\t\t\t\t\t\t...state.files,\r\n\t\t\t\t\t\t[action.payload.path]: {\r\n\t\t\t\t\t\t\ttime: new Date(),\r\n\t\t\t\t\t\t\tfiles: [],\r\n\t\t\t\t\t\t\thasError: true,\r\n\t\t\t\t\t\t\terror: action.payload.error\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\tbreak;\r\n\r\n\t\tcase ADD_LAYOUT_CONTAINER:\r\n\t\t\tstate.containers.push({ID: action.payload.containerID, paneID: action.payload.paneID});\r\n\t\t\tstate.numContainers = state.containers.length;\r\n\t\t\tstate.activeRemoteContainerID = {\r\n\t\t\t\t...state.activeRemoteContainerID,\r\n\t\t\t\t[action.payload.paneID]: action.payload.containerID\r\n\t\t\t};\r\n\t\t\treturn {...state};\r\n\t\tcase REMOVE_LAYOUT_CONTAINER:\r\n\t\t\t// Remove the specified containerID from containers\r\n\t\t\tstate.containers = state.containers.filter(item => item.ID !== action.payload.containerID);\r\n\t\t\tstate.numContainers = state.containers.length;\r\n\t\t\tconst lastItem = state.containers.filter(item => item.paneID === action.payload.paneID).slice(-1).pop();\r\n\t\t\tstate.activeRemoteContainerID = {\r\n\t\t\t\t...state.activeRemoteContainerID,\r\n\t\t\t\t[action.payload.paneID]: (lastItem ? lastItem.ID : undefined)\r\n\t\t\t};\r\n\r\n\t\t\treturn {...state};\r\n\t\tcase CHANGE_ACTIVE_REMOTE_CONTAINER:\r\n\t\t\tstate.activeRemoteContainerID = {\r\n\t\t\t\t...state.activeRemoteContainerID,\r\n\t\t\t\t[action.payload.paneID]: action.payload.containerID\r\n\t\t\t};\r\n\t\t\treturn {...state};\r\n\t\tcase CHANGE_LAYOUT_COLS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnumCols: action.payload.numCols\r\n\t\t\t};\r\n\t\tcase CHANGE_DISTRACTION_FREE_MODE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdistractionFreeMode: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\r\n}\r\n","// A very simple stack implementation to handle back links in remote explorer\r\nclass Stack  {\r\n    constructor(items = undefined, count = undefined) {\r\n        if (items && count) {\r\n            this.items = items;\r\n            this.count = count;\r\n            return;\r\n        }\r\n        this.items = [{remoteName: \"\", remotePath: \"\"}];\r\n        this.count = 1;\r\n    }\r\n\r\n    getLength() {\r\n        return this.count;\r\n    }\r\n\r\n    push(item) {\r\n        this.items.push(item);\r\n        this.count = this.count + 1;\r\n    }\r\n\r\n    pop() {\r\n        if (this.count > 0) {\r\n            this.count = this.count - 1;\r\n        }\r\n\r\n        return this.items.pop();\r\n    }\r\n\r\n    peek() {\r\n        return this.items.slice(-1)[0];\r\n    }\r\n\r\n    empty() {\r\n        this.items = [];\r\n        this.count = 0;\r\n    }\r\n\r\n    moveBack() {\r\n\r\n        if (this.getLength() > 1)\r\n            return this.pop();\r\n    }\r\n}\r\n\r\nexport default Stack;","import Stack from './Stack'\r\n\r\n// A very simple stack implementation to handle back links in remote explorer\r\nclass BackStack {\r\n    constructor(backStack = undefined) {\r\n        if (backStack) {\r\n            this.backStack = new Stack(backStack.backStack.items, backStack.backStack.count);\r\n            this.forwardStack = new Stack(backStack.forwardStack.items, backStack.forwardStack.count);\r\n            return;\r\n        }\r\n        this.backStack = new Stack();\r\n        this.forwardStack = new Stack();\r\n    }\r\n\r\n\r\n    getLength() {\r\n        return this.backStack.getLength();\r\n    }\r\n\r\n    push(item) {\r\n\r\n        this.backStack.push(item);\r\n        this.forwardStack.empty();\r\n\r\n    }\r\n\r\n    pop() {\r\n        const temp = this.backStack.pop();\r\n        return temp;\r\n    }\r\n\r\n    peek() {\r\n        return this.backStack.peek();\r\n    }\r\n\r\n    empty() {\r\n        this.backStack.empty();\r\n        this.forwardStack.empty();\r\n    }\r\n\r\n    moveBack() {\r\n        const temp = this.backStack.moveBack();\r\n        if(temp)\r\n            this.forwardStack.push(temp);\r\n        return temp;\r\n    }\r\n\r\n    moveForward(){\r\n        const temp = this.forwardStack.pop();\r\n        if(temp){\r\n            //Pop was successful\r\n            this.backStack.push(temp);\r\n        }\r\n        return temp;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default BackStack;","import {\r\n\tCHANGE_GRID_MODE,\r\n\tCHANGE_LOAD_IMAGES,\r\n\tCHANGE_PATH,\r\n\tCHANGE_REMOTE_NAME,\r\n\tCHANGE_REMOTE_PATH,\r\n\tCHANGE_SEARCH_QUERY,\r\n\tCHANGE_SORT_FILTER,\r\n\tCHANGE_VISIBILITY_FILTER,\r\n\tCREATE_PATH,\r\n\tNAVIGATE_BACK,\r\n\tNAVIGATE_FWD,\r\n\tNAVIGATE_UP,\r\n\tREMOVE_PATH\r\n} from \"../actions/types\";\r\nimport BackStack from \"../utils/classes/BackStack\";\r\n\r\nconst initialState = {\r\n    backStacks: {},\r\n    currentPaths: {},\r\n    visibilityFilters: {},\r\n    gridMode: {},\r\n    searchQueries: {},\r\n    loadImages: {},\r\n    sortFilters: {},\r\n    sortFiltersAscending: {}\r\n};\r\n\r\n/**\r\n * Specifies the reducers for explorer state manipulation.\r\n * @param state {$ObjMap}\r\n * @param action {$ObjMap}\r\n * @returns {{currentPaths: {}, visibilityFilters: {}, gridMode: {}, searchQueries: {}, backStacks: {}}|({currentPaths, visibilityFilters, gridMode, searchQueries, backStacks}&{currentPaths: (initialState.currentPaths|{}), visibilityFilters: (initialState.visibilityFilters|{}), gridMode: (initialState.gridMode|{}), searchQueries: (initialState.searchQueries|{}), backStacks: (initialState.backStacks|{})})}\r\n */\r\nexport default function (state = initialState, action) {\r\n\r\n    const id = action.id;\r\n    if (id) {\r\n\r\n        let backStack = state.backStacks[id];\r\n        if (!backStack || !(backStack instanceof BackStack)) {\r\n\r\n\r\n            if (!(backStack instanceof BackStack)) {\r\n                // Redux dosen't store the internal functions of class objects when serialized. So as a work around,\r\n                // if the backstack is not an instance of backStack, i.e. its methods are missing,\r\n                // create a new backstack with current data\r\n                backStack = new BackStack(backStack)\r\n            } else {\r\n                backStack = new BackStack();\r\n            }\r\n        }\r\n\r\n        let remoteName = action.remoteName;\r\n        let remotePath = action.remotePath;\r\n\r\n\t\tif (!remoteName) remoteName = \"\";\r\n\t\tif (!remotePath) remotePath = \"\";\r\n\t\tconst data = {\r\n\t\t\tremoteName: remoteName,\r\n\t\t\tremotePath: remotePath\r\n\t\t};\r\n\r\n\t\tlet visibilityFilter = state.visibilityFilters[id];\r\n\t\tlet gridMode = state.gridMode[id];\r\n\t\tif (!gridMode) gridMode = \"list\";\r\n\t\tlet searchQuery = \"\";\r\n\t\tlet loadImages = state.loadImages[id];\r\n\t\tif (!loadImages) loadImages = false;\r\n\r\n\t\tlet sortFilterAscending = state.sortFiltersAscending[id];\r\n\t\tif (!sortFilterAscending) sortFilterAscending = true;\r\n\t\tlet sortFilter = state.sortFilters[id];\r\n\t\tif (!sortFilter) sortFilter = \"name\";\r\n\r\n\t\tswitch (action.type) {\r\n            case CHANGE_PATH:\r\n                backStack.push(data);\r\n                break;\r\n\r\n            case CHANGE_REMOTE_NAME:\r\n                if (remoteName.indexOf('/') === 0) {/*The name starts with a /: local Name*/\r\n                    remotePath = remoteName;\r\n                    remoteName = \"/\";\r\n\r\n                } else {\r\n                    remotePath = \"\";\r\n                }\r\n                backStack.empty();\r\n                backStack.push({remoteName: remoteName, remotePath: remotePath});\r\n                // ptr++;\r\n\r\n                break;\r\n\r\n            case CHANGE_REMOTE_PATH:\r\n\t\t\t\tbackStack.push({remoteName: backStack.peek().remoteName, remotePath: remotePath});\r\n\t\t\t\t// ptr++;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CREATE_PATH:\r\n\t\t\t\tif (!backStack || !(backStack instanceof BackStack))\r\n\t\t\t\t\tbackStack = new BackStack();\r\n\t\t\t\tbreak;\r\n\t\t\tcase REMOVE_PATH:\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tbackStacks: {...state.backStacks, [id]: undefined},\r\n\t\t\t\t\tcurrentPaths: {...state.currentPaths, [id]: undefined},\r\n\t\t\t\t\tvisibilityFilters: {...state.visibilityFilters, [id]: undefined},\r\n\t\t\t\t\tgridMode: {...state.gridMode, [id]: undefined},\r\n\t\t\t\t\tsearchQueries: {...state.searchQueries, [id]: undefined},\r\n\t\t\t\t\tloadImages: {...state.loadImages, [id]: undefined},\r\n\t\t\t\t\tsortFilters: {...state.sortFilters, [id]: undefined},\r\n\t\t\t\t\tsortFiltersAscending: {...state.sortFiltersAscending, [id]: undefined},\r\n\t\t\t\t};\r\n\t\t\t// break;\r\n\t\t\tcase NAVIGATE_UP:\r\n\t\t\t\t// TODO: Write logic for up, which will navigate one directory up\r\n\t\t\t\tlet current = backStack.peek();\r\n\r\n\t\t\t\tif (current.remotePath && current.remotePath !== \"\") {\r\n\t\t\t\t\tconst splitPath = current.remotePath.split('/');\r\n\t\t\t\t\tcurrent.remotePath = \"\";\r\n\t\t\t\t\tif (splitPath.length > 1)\r\n\t\t\t\t\t\tfor (let i = 0; i < splitPath.length - 1; i++) {\r\n\t\t\t\t\t\t\tcurrent.remotePath = current.remotePath + ((i !== 0) ? '/' : '') + splitPath[i];\r\n                        }\r\n                }\r\n                backStack.push(current);\r\n                break;\r\n\r\n            case NAVIGATE_FWD:\r\n                backStack.moveForward();\r\n                break;\r\n\r\n            case NAVIGATE_BACK:\r\n                backStack.moveBack();\r\n                break;\r\n            case CHANGE_VISIBILITY_FILTER:\r\n\t\t\t\tif (action.filter)\r\n\t\t\t\t\tvisibilityFilter = action.filter;\r\n\t\t\t\telse\r\n\t\t\t\t\tvisibilityFilter = \"\";\r\n                break;\r\n            case CHANGE_GRID_MODE:\r\n                if (action.mode) {\r\n                    gridMode = action.mode;\r\n                }\r\n                break;\r\n\r\n            case CHANGE_SEARCH_QUERY:\r\n                searchQuery = action.searchQuery;\r\n                break;\r\n\r\n            case CHANGE_LOAD_IMAGES:\r\n                loadImages = action.payload;\r\n                break;\r\n            case CHANGE_SORT_FILTER:\r\n                sortFilter = action.payload.sortFilter;\r\n                sortFilterAscending =  action.payload.sortFilterAscending;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return {\r\n            ...state,\r\n            backStacks: {...state.backStacks, [id]: backStack},\r\n            currentPaths: {...state.currentPaths, [id]: {...backStack.peek()}},\r\n            visibilityFilters: {...state.visibilityFilters, [id]: visibilityFilter},\r\n            gridMode: {...state.gridMode, [id]: gridMode},\r\n            searchQueries: {...state.searchQueries, [id]: searchQuery},\r\n            loadImages: {...state.loadImages, [id]: loadImages},\r\n            sortFilters: {...state.sortFilters, [id]: sortFilter},\r\n            sortFiltersAscending: {...state.sortFiltersAscending, [id]: sortFilterAscending},\r\n        };\r\n    } else {\r\n        // console.error(\"ID is unexpectedly null\");\r\n        return state;\r\n    }\r\n\r\n\r\n};\r\n","import {GET_REMOTE_ABOUT, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    about: {}\r\n};\r\n/**\r\n * Specifies reducers for getting information about the current providers.\r\n * @param state\r\n * @param action\r\n * @returns {{about: {}}|({about}&{about: (initialState.about|{})})}\r\n */\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case GET_REMOTE_ABOUT:\r\n            if (action.status === REQUEST_SUCCESS) {\r\n                return {...state, about: {...state.about, [action.id]: action.payload}};\r\n            } else if (action.status === REQUEST_ERROR) {\r\n                // console.log(\"Error occurred\");\r\n                return state;\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import {CHANGE_AUTH_KEY, CHANGE_AXIOS_INTERCEPTOR, CHANGE_IP_ADDRESS} from \"../actions/types\";\r\nimport axiosInstance from \"../utils/API/API\";\r\nimport {AUTH_KEY, IP_ADDRESS_KEY} from \"../utils/Constants\";\r\n\r\nconst initialState = {\r\n    auth: {authKey: \"\", ipAddress: \"http://localhost:5572\", interceptor: \"\"}\r\n};\r\n\r\n/**\r\n * Specifies reducers for user actions like change username, password, ipAddress etc.\r\n * @param state\r\n * @param action\r\n * @returns {{auth: {authKey: string, ipAddress: string}}|({auth}&{auth: ((initialState.auth&*)|({password, ipAddress, userName}&*))})}\r\n */\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHANGE_AUTH_KEY:\r\n        case CHANGE_IP_ADDRESS:\r\n            state = {\r\n                ...state,\r\n                auth: {...state.auth, ...action.payload}\r\n            };\r\n            localStorage.setItem(AUTH_KEY, state.auth.authKey);\r\n            // localStorage.setItem(USER_NAME_KEY, state.auth.userName);\r\n            // localStorage.setItem(PASSWORD_KEY, state.auth.password);\r\n            localStorage.setItem(IP_ADDRESS_KEY, state.auth.ipAddress);\r\n            return state;\r\n        case CHANGE_AXIOS_INTERCEPTOR:\r\n            if (state.auth.interceptor)\r\n                axiosInstance.interceptors.request.eject(state.auth.interceptor);\r\n\r\n            const interceptorID = axiosInstance.interceptors.request.use(\r\n                config => {\r\n                    // Setup the configuration of authentication headers\r\n                    config.headers.Authorization = 'Basic ' + localStorage.getItem(AUTH_KEY);\r\n                    config.baseURL = localStorage.getItem(\"ipAddress\");\r\n                    return config;\r\n                },\r\n                error => Promise.reject(error)\r\n            );\r\n            return {\r\n                ...state,\r\n                auth: {...state.auth, interceptor: interceptorID}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {LOAD_IMAGE, REQUEST_ERROR, REQUEST_LOADING, REQUEST_SUCCESS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOAD_IMAGE:\r\n            const {url, data, error} = action.payload;\r\n            let save = state[url];\r\n            if (!save)\r\n                save = {\r\n                    isLoading: false,\r\n                    data: \"\",\r\n                    error: \"\",\r\n                    hasError: false\r\n                };\r\n\r\n            switch (action.status) {\r\n                case REQUEST_LOADING:\r\n                    save.isLoading = true;\r\n                    save.hasError = false;\r\n                    break;\r\n                case REQUEST_SUCCESS:\r\n                    save.isLoading = false;\r\n                    save.hasError = false;\r\n                    save.data = data;\r\n                    break;\r\n                case REQUEST_ERROR:\r\n                    save.hasError = true;\r\n                    save.isLoading = false;\r\n                    save.error = error;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return {\r\n                ...state,\r\n                [url]: {...save}\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_VERSION, REQUEST_ERROR, REQUEST_SUCCESS } from '../actions/types';\r\n\r\nexport const initialState = {\r\n  arch: '',\r\n  decomposed: [],\r\n  goVersion: '',\r\n  isGit: false,\r\n  os: '',\r\n  version: '',\r\n  hasError: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  if (action.type === GET_VERSION) {\r\n    if (action.status === REQUEST_SUCCESS) {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        hasError: false\r\n      };\r\n    }\r\n    if (action.status === REQUEST_ERROR) {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        hasError: true\r\n      };\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n","import {CREATE_MOUNT, GET_MOUNT_LIST, REMOVE_MOUNT, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst initialState = {\r\n\tcurrentMounts: [],\r\n\tmountError: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase CREATE_MOUNT:\r\n\t\t\tif (action.status === REQUEST_SUCCESS) {\r\n\t\t\t\ttoast.info('Mount Success');\r\n\t\t\t} else if (action.status === REQUEST_ERROR) {\r\n\t\t\t\ttoast.error('Error creating mount ' + action.payload);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase GET_MOUNT_LIST:\r\n\t\t\tif (action.status === REQUEST_SUCCESS) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentMounts: action.payload.mountPoints\r\n\t\t\t\t}\r\n\t\t\t} else if (action.status === REQUEST_ERROR) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentMounts: [],\r\n\t\t\t\t\tmountError: action.payload\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase REMOVE_MOUNT:\r\n\t\t\tif (action.status === REQUEST_SUCCESS) {\r\n\t\t\t\ttoast.info('Unmount success');\r\n\t\t\t} else if (action.status === REQUEST_ERROR) {\r\n\t\t\t\ttoast.error(\"Couldn't remove mount\");\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\treturn state\r\n}\r\n","import {combineReducers} from 'redux';\r\n\r\nimport statusReducer from './statusReducer';\r\nimport configReducer from \"./configReducer\";\r\nimport explorerReducer from \"./explorerReducer\";\r\nimport explorerState from \"./explorerStateReducer\";\r\nimport {SIGNOUT_REQUEST} from \"../actions/types\";\r\nimport providerStatusReducer from \"./providerStatusReducer\";\r\nimport userActionsReducer from \"./userActionsReducer\";\r\nimport imagesReducer from \"./imagesReducer\";\r\nimport versionReducer from \"./versionReducer\";\r\nimport mountReducer from \"./mountReducer\";\r\n\r\n/**\r\n * Configures the root reducer to be executed before any other reducers configured in the system.\r\n * This involves actions for clearing the localStorage and state when user signs out.\r\n * @param state\r\n * @param action\r\n * @returns {any}\r\n */\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === SIGNOUT_REQUEST) {\r\n        localStorage.clear();\r\n        state = undefined;\r\n    }\r\n\r\n    return appReducer(state, action);\r\n};\r\n\r\n/**\r\n * List of reducers to be configured. The reducers are called one by one from top to bottom.\r\n * @type {Reducer<any>}\r\n */\r\nconst appReducer = combineReducers({\r\n    status: statusReducer,\r\n    config: configReducer,\r\n    remote: explorerReducer,\r\n    explorer: explorerState,\r\n    providerStatus: providerStatusReducer,\r\n    user: userActionsReducer,\r\n    imageLoader: imagesReducer,\r\n    version: versionReducer,\r\n    mount: mountReducer,\r\n    // remoteOps: remoteOpsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","// Used to persist redux-state to the localStorage.\r\nexport class StateLoader {\r\n\r\n    /**\r\n     * It loads the redux state from the local store.\r\n     * @returns {{}|any}\r\n     */\r\n    loadState() {\r\n        try {\r\n            let serializedState = localStorage.getItem(\"curState\");\r\n\r\n            if (serializedState === null) {\r\n                return this.initializeState();\r\n            }\r\n\r\n            return JSON.parse(serializedState);\r\n        } catch (err) {\r\n            return this.initializeState();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Saves the current state to the localStore with variable name curState.\r\n     * BEWARE: Uses expensive operation JSON.stringify(). May cause performance issues. Any alternative is welcome.\r\n     * @param state {$ObjMap} The current state to be saved.\r\n     */\r\n    saveState(state) {\r\n        const newState = {\r\n            ...state,\r\n            imageLoader: undefined\r\n        };\r\n        try {\r\n            let serializedState = JSON.stringify(newState);\r\n            localStorage.setItem(\"curState\", serializedState);\r\n\r\n        } catch (err) {\r\n            console.error(\"Error occurred while saving state\");\r\n            throw new Error(`Cannot Save State ${err}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes the redux state with an empty map {}.\r\n     * @returns {{}}\r\n     */\r\n    initializeState() {\r\n        return {\r\n            //state object\r\n        }\r\n    };\r\n}\r\n","const throttled = {};\r\n\r\nexport default ({getState, dispatch}) => next => action => {\r\n    const time = action.meta && action.meta.throttle;\r\n\r\n    if (!time)\r\n        return next(action);\r\n\r\n    if (throttled[action.type]) {\r\n        return;\r\n    }\r\n\r\n    throttled[action.type] = true;\r\n\r\n    setTimeout(() => {\r\n        throttled[action.type] = false;\r\n    }, time);\r\n\r\n    next(action);\r\n}","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport {StateLoader} from \"./utils/StateLoader\";\r\nimport throttledMiddleware from './throttled';\r\n\r\n\r\nexport const middleware = [thunk, throttledMiddleware];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst stateLoader = new StateLoader();\r\n\r\nconst store = createStore(rootReducer,\r\n    stateLoader.loadState(),\r\n    composeEnhancers(\r\n        applyMiddleware(...middleware)\r\n    ));\r\n\r\n//Function to persist store data to localStorage\r\nstore.subscribe(() => {\r\n    stateLoader.saveState(store.getState());\r\n});\r\n\r\nexport default store;","import 'react-app-polyfill/ie9'; // For IE 9-11 support\r\nimport 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","/**\r\n * Returns a string array with possible filtering options.\r\n * @type {string[]}\r\n */\r\nexport const visibilityFilteringOptions = [\"Images\", \"Pdf\", \"Videos\"];\r\n\r\n/**\r\n * Refresh timeout for checking backend status.\r\n * In milliseconds.\r\n * @type {number}\r\n */\r\nexport const STATUS_REFRESH_TIMEOUT = 1000 * 5;\r\n/**\r\n * Refresh timeout for checking if the config is created.\r\n * In milliseconds.\r\n * @type {number}\r\n */\r\nexport const NEW_DRIVE_CONFIG_REFRESH_TIMEOUT = 1000;\r\nexport const MODAL_ROOT_ELEMENT = \"modal-root\";\r\n\r\nexport const USER_NAME_KEY = \"userName\";\r\nexport const AUTH_KEY = \"authKey\";\r\nexport const PASSWORD_KEY = \"password\";\r\nexport const IP_ADDRESS_KEY = \"ipAddress\";\r\nexport const LOGIN_TOKEN = \"login_token\";\r\n\r\nexport const FILES_VIEW_HEIGHT = \"75vh\";","const urls = {\r\n    /**\r\n     * Make Directory.\r\n     */\r\n    mkdir: \"operations/mkdir\",\r\n    /**\r\n     * Purge a directory.\r\n     */\r\n    purge: \"operations/purge\",\r\n    /**\r\n     * Delete a file.\r\n     */\r\n    deleteFile: \"operations/deletefile\",\r\n    /**\r\n     * Create public link.\r\n     */\r\n    createPublicLink: \"operations/publiclink\",\r\n    /**\r\n     * Stats for rclone backend.\r\n     */\r\n    stats: \"core/stats\",\r\n    /**\r\n     * Check and set bwlimit.\r\n     */\r\n    bwlimit: \"core/bwlimit\",\r\n    /**\r\n     * Move a directory.\r\n     */\r\n    moveDir: \"sync/move\",\r\n    /**\r\n     * Move a file.\r\n     */\r\n    moveFile: \"operations/movefile\",\r\n    /**\r\n     * Copy Directory\r\n     */\r\n    copyDir: \"sync/copy\",\r\n    /**\r\n     * Copy Files.\r\n     */\r\n    copyFile: \"operations/copyfile\",\r\n    /**\r\n     * Cleanup the remote recycle bin(trash).\r\n     */\r\n    cleanUpRemote: \"operations/cleanup\",\r\n\r\n    /**\r\n     * Try to connect without any authentication headers.\r\n     */\r\n    noopAuth: \"rc/noopauth\",\r\n    /**\r\n     * Check the version of the rclone.\r\n     */\r\n    getRcloneVersion: \"core/version\",\r\n\r\n    /**\r\n     * Memstats for the rclone backend.\r\n     */\r\n    getRcloneMemStats: \"core/memstats\",\r\n    /**\r\n     * Get options available in the backend.\r\n     */\r\n    getOptions: \"options/get\",\r\n    /**\r\n     * Get providers configuration in the rclone backend.\r\n     */\r\n    getProviders: \"config/providers\",\r\n    /**\r\n     * Get entire remote configuration dump from backend.\r\n     */\r\n    getConfigDump: \"config/dump\",\r\n    /**\r\n     * List the currently running jobs.\r\n     */\r\n    getRunningJobs: \"job/list\",\r\n    /**\r\n     * Get the status for a job.\r\n     */\r\n    getStatusForJob: \"job/status\",\r\n    /**\r\n     *  Get config for a specific remote.\r\n     */\r\n    getConfigForRemote: \"config/get\",\r\n    /**\r\n     * Create a new config with parameters.\r\n     */\r\n    createConfig: \"config/create\",\r\n    /**\r\n     * Update an existing config with parameters.\r\n     */\r\n    updateConfig: \"config/update\",\r\n    /**\r\n     * Get File system information and supported features for a given remote time.\r\n     */\r\n    getFsInfo: \"operations/fsinfo\",\r\n\r\n    /**\r\n     * List the remote names of created remotes.\r\n     */\r\n\tlistRemotes: \"config/listremotes\",\r\n\t/**\r\n\t * Get the files for given remoteName and path.\r\n\t */\r\n\tgetFilesList: \"operations/list\",\r\n\r\n\t/**\r\n\t * Get information about the rclone backend.\r\n\t */\r\n\tgetAbout: \"operations/about\",\r\n\t/**\r\n\t * Delete a config with config name.\r\n\t */\r\n\tdeleteConfig: \"config/delete\",\r\n\r\n\t/**\r\n\t * Stop a running job by job id\r\n\t */\r\n\tstopJob: \"job/stop\",\r\n\r\n\r\n\t/**\r\n\t * List all the current mounts\r\n\t */\r\n\tlistMounts: \"mount/listmounts\",\r\n\r\n    /**\r\n     * Create a new mount (mount)\r\n     */\r\n    createMount: \"mount/mount\",\r\n\r\n    /**\r\n     * Delete a created mount(unmount)\r\n     */\r\n    removeMount: \"mount/unmount\",\r\n\r\n    /**\r\n     * Delete all created mounts(unmount)\r\n     */\r\n    unmountAll: \"mount/unmountall\",\r\n\r\n};\r\nexport default urls;\r\n","/**\r\n * Returns whether the passed in object (obj) is empty or it contains some entries.\r\n * @param obj {$ObjMap} An object to check if it is empty: it can be an array or a map.\r\n * @returns {boolean}\r\n */\r\nexport function isEmpty(obj) {\r\n    if (Array.isArray(obj)) return obj.length === 0;\r\n    for (let key in obj) {\r\n        if (obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Converts bytes into MB.\r\n * @param bytes {number} bytes to be converted.\r\n * @returns {number}\r\n */\r\nexport function bytesToMB(bytes) {\r\n    if (bytes === 0) return 0;\r\n    const mb = bytes / 1024 / 1024;\r\n\r\n    return mb;\r\n}\r\n\r\n/**\r\n * Converts bytes to KB.\r\n * @param bytes {number} bytes to be converted\r\n * @returns {number}\r\n */\r\nexport function bytesToKB(bytes) {\r\n    if (bytes === 0) return 0;\r\n    const kb = bytes / 1024;\r\n\r\n    return kb;\r\n}\r\n\r\n/**\r\n * Converts bytes to GB.\r\n * @param bytes {number} bytes to be converted\r\n * @returns {number}\r\n */\r\nexport function bytesToGB(bytes) {\r\n    if (bytes === 0) return 0;\r\n    const mb = bytes / 1024 / 1024 / 1024;\r\n\r\n    return mb;\r\n}\r\n\r\n/**\r\n * Converts bytes per second to Megabytes per second.\r\n * @param bps {number} bytes per second.\r\n * @returns {number}\r\n */\r\nexport function bpsToMbps(bps) {\r\n    if (bps === 0) return 0;\r\n    const mbps = bytesToMB(bps);\r\n    return mbps;\r\n}\r\n\r\n/**\r\n * Format bytes to a human readable format.\r\n * @param bytes {number} bytes to be formatted.\r\n * @param decimals {number} specifies the precision of numbers after the decimal point.\r\n * @returns {string}\r\n */\r\nexport function formatBytes(bytes, decimals = 2) {\r\n    if (bytes < 1) return '0 B';\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * Converts time in seconds to a minute and hour string of the format \"HH:MM:SS hrs\"\r\n * @param seconds {number} Number of seconds since 00:00:00\r\n * @returns {string}\r\n */\r\nexport function secondsToMinutesHourString(seconds) {\r\n    if (seconds === 0) {\r\n        return `00:00:00 S`;\r\n    }\r\n    let minutes = seconds / 60;\r\n    seconds = seconds % 60;\r\n    let hours = minutes / 60;\r\n    minutes = minutes % 60;\r\n\r\n    return `${Math.round(hours)}:${Math.round(minutes)}:${Math.round(seconds)} hrs`;\r\n}\r\n\r\n/**\r\n * Converts seconds to a human readable string with support for year, day, week, minute, seconds.\r\n * @param seconds\r\n * @returns {string}\r\n */\r\nexport function secondsToStr(seconds) {\r\n    // TIP: to find current time in milliseconds, use:\r\n    // var  current_time_milliseconds = new Date().getTime();\r\n\r\n    function numberEnding(number) {\r\n        return (number > 1) ? 's' : '';\r\n    }\r\n\r\n    let years = Math.floor(seconds / 31536000);\r\n    if (years) {\r\n        return years + ' year' + numberEnding(years);\r\n    }\r\n    //TODO: Months! Maybe weeks?\r\n    let days = Math.floor((seconds %= 31536000) / 86400);\r\n    if (days) {\r\n        return days + ' day' + numberEnding(days);\r\n    }\r\n    let hours = Math.floor((seconds %= 86400) / 3600);\r\n    if (hours) {\r\n        return hours + ' hour' + numberEnding(hours);\r\n    }\r\n    let minutes = Math.floor((seconds %= 3600) / 60);\r\n    if (minutes) {\r\n        return minutes + ' minute' + numberEnding(minutes);\r\n    }\r\n    seconds = seconds % 60;\r\n    if (seconds) {\r\n        return seconds.toFixed(2) + ' second' + numberEnding(seconds);\r\n    }\r\n    return 'Just now'; //'just now' //or other string you like;\r\n}\r\n\r\n/**\r\n * Base validator takes in a regex exp and tests an input str against that regex.\r\n * @param regex\r\n * @param str\r\n * @returns {boolean | * | never}\r\n */\r\nexport function baseValidator(regex, str) {\r\n\r\n    return regex.test(str);\r\n}\r\n\r\n/**\r\n * Validate Size Suffix of the format (off | 1K | 1M | 100G | 10P ) etc\r\n * @param str {string} String to be validated\r\n * @returns {boolean|*|never}\r\n */\r\nexport function validateSizeSuffix(str) {\r\n    const regex = /^(off|(([0-9]+[.][0-9]+|[0-9]+)([KMGTP])))$/i;\r\n\r\n    return baseValidator(regex, str);\r\n}\r\n\r\n\r\n/**\r\n * Validate Size Suffix of the format (off | 1K | 1M | 100G | 10P ) etc\r\n * @param str {string} String to be validated\r\n * @returns {boolean|*|never}\r\n */\r\nexport function validateBoolean(str) {\r\n    const regex = /^(false|true)$/i;\r\n\r\n    return baseValidator(regex, str);\r\n}\r\n\r\n/**\r\n * Validate integer without decimal points (0-9)\r\n * @param str {number|string} The string to be validated.\r\n * @returns {boolean|*|never}\r\n */\r\nexport function validateInt(str) {\r\n    const regex = /^([0-9]+)$/;\r\n    return baseValidator(regex, str);\r\n}\r\n\r\n/**\r\n * Validate duration hours, minutes, seconds, milliseconds etc.\r\n * @param str {number|string} The duration to be validated.\r\n * @returns {boolean|*|never}\r\n */\r\nexport function validateDuration(str) {\r\n    const regex = /^(\\d+[h])?(\\d+[m])?(\\d+[s])?(\\d+ms)??$/i;\r\n    return baseValidator(regex, str);\r\n}\r\n\r\n/**\r\n * Validate the allowed drive name\r\n * @returns {boolean|*|never}\r\n * */\r\nexport function validateDriveName(name) {\r\n    const regex = /^[0-9A-Za-z_-]*$/i;\r\n    return baseValidator(regex, name);\r\n}\r\n\r\n/**\r\n * Opens the specified URL in a new tab and focus on it.\r\n * @param url {string} URL to be opened.\r\n */\r\nexport function openInNewTab(url) {\r\n    let win = window.open(url, '_blank');\r\n    win.focus();\r\n}\r\n\r\n/**\r\n * Helper function for finding the provider with a given prefix.\r\n * @param config {$ObjMap} Array of remote configs\r\n * @param name {string} Specifies the name of the provider to find.\r\n * @returns {*}\r\n */\r\n\r\nexport function findFromConfig(config, name) {\r\n    const currentConfig = config.find((ele, idx, array) => {\r\n        return (name === ele.Prefix);\r\n    });\r\n    return currentConfig;\r\n}\r\n\r\n\r\n/**\r\n * Helper function to add semicolon to the last.\r\n * Behaviour: if the passed in string does not have a semicolon at last, then insert it.\r\n * If there is a semicolon in the middle, skip insertion.\r\n * @param name\r\n * @returns {string}\r\n */\r\nexport function addColonAtLast(name) {\r\n    if (name.indexOf(':') === -1) {\r\n        if (name[name.length - 1] !== \":\") {\r\n            name = name + \":\"\r\n        }\r\n    }\r\n\r\n    return name;\r\n}\r\n\r\n/**\r\n * Allowed types for visibility Status modification in file explorer.\r\n * @type {{Pdf: string, Images: string}}\r\n */\r\nconst visibilityAssociation = {\r\n    Images: \"image/jpeg\",\r\n    Pdf: \"application/pdf\",\r\n};\r\n\r\n/**\r\n * Function to filter the list of files based on the provided visibility status.\r\n * @param list {$ObjMap}\r\n * @param filter {string} Specifies the type of files to display eg: Images, Pdf etc.\r\n * @param checkList {$ObjMap} Provides mimeType matches for every string visibility operation eg: Images: \"image/jpeg\"\r\n * @returns {$ObjMap}\r\n */\r\nexport function changeListVisibility(list, filter, checkList = visibilityAssociation) {\r\n    let acceptType = checkList[filter];\r\n    // console.log(list);\r\n    if (acceptType) {\r\n        let newList = list.filter((item) => {\r\n            return (item.IsDir || item.MimeType === acceptType);\r\n        });\r\n        return newList;\r\n    }\r\n    return list;\r\n\r\n}\r\n\r\n/**\r\n * Function to filter the list of files based on the provided search query.\r\n * Uses linear search for filtering the relevant files.\r\n * @param list\r\n * @param searchQuery\r\n * @returns {*}\r\n */\r\nexport function changeSearchFilter(list, searchQuery = \"\") {\r\n    searchQuery = searchQuery.toLowerCase();\r\n    if (searchQuery) {\r\n        let newList = list.filter((item) => {\r\n            return item.Name.toLowerCase().includes(searchQuery);\r\n        });\r\n        return newList;\r\n    }\r\n    return list;\r\n\r\n}\r\n\r\n/**\r\n * Checks whether the remoteName is local or not. Returns true if it is a remote local path, false otherwise.\r\n * Behaviour: if the name starts with \"/\" it is a local name.\r\n * @param remoteName {string} Name of the remote to check for.\r\n * @returns {boolean}\r\n */\r\nexport function isLocalRemoteName(remoteName) {\r\n    return (remoteName && remoteName !== \"\" && remoteName[0] === \"/\");\r\n}\r\n\r\n/**\r\n * Group the array items by the given key inside each object.\r\n *\r\n * @param xs{T}     array of T type\r\n * @param keyGetter       key to select from the T\r\n * @returns map{T}  map with format {key: [...objects with same key]}\r\n */\r\n\r\n// export function groupByKey(xs, key) {\r\n//     return xs.reduce(function(rv, x) {\r\n//         (rv[x[key]] = rv[x[key]] || []).push(x);\r\n//         return rv;\r\n//     }, {});\r\n// }\r\nexport function groupByKey(xs, keyGetter) {\r\n    const map = new Map();\r\n    xs.forEach((item) => {\r\n        const key = keyGetter(item);\r\n        const collection = map.get(key);\r\n        if (!collection) {\r\n            map.set(key, [item]);\r\n        } else {\r\n            collection.push(item);\r\n        }\r\n    });\r\n    return map;\r\n}\r\n\r\n/**\r\n *\r\n * @param type              {string}    One of {\"name\", \"size\", \"modified\"}\r\n * @param ascending         {boolean}   true for ascending order, false for descending\r\n * @returns {function(*, *): number}\r\n */\r\nexport function getSortCompareFunction(type, ascending) {\r\n\r\n    // console.log(\"Here\", a,b)\r\n    switch (type) {\r\n        case \"name\":\r\n            return (a, b) => {\r\n                let x, y;\r\n                x = a.Name.toLowerCase();\r\n                y = b.Name.toLowerCase();\r\n                if (x < y) {\r\n                    return ascending ? -1 : 1;\r\n                }\r\n                if (x > y) {return ascending ? 1 : -1;}\r\n                return 0;\r\n            }\r\n        case \"size\":\r\n            return (a, b) => {\r\n                let x, y;\r\n                x = a.Size ? a.Size : 0;\r\n                y = b.Size ? b.Size : 0;\r\n                return ascending ? ( x - y ) : ( y - x );\r\n            }\r\n        case \"modified\":\r\n            return (a, b) => {\r\n                let x, y;\r\n                x = new Date(a.ModTime);\r\n                y = new Date(b.ModTime);\r\n                return ascending ? (x - y) : (y - x);\r\n            }\r\n        default:\r\n            break;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function makeUniqueID(length) {\r\n    let result = '';\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}\r\n","import axios from \"axios\";\r\nimport {isLocalRemoteName} from \"../Tools\";\r\nimport {AUTH_KEY, IP_ADDRESS_KEY} from \"../Constants\";\r\nimport urls from \"./endpoint\";\r\n\r\n/**\r\n * Global level axios configuration. These settings are automatically used in other places by using an axiosInstance instead of axios directly\r\n */\r\nlet axiosInstance = axios.create({\r\n    headers: {'Content-Type': 'application/json'},\r\n    responseType: \"json\"\r\n});\r\n\r\n/**\r\n * Interceptor adds basic authentication to every axios request.\r\n */\r\naxiosInstance.interceptors.request.use(\r\n    config => {\r\n        config.baseURL = localStorage.getItem(IP_ADDRESS_KEY);\r\n\r\n        config.headers.Authorization = 'Basic ' + localStorage.getItem(AUTH_KEY);\r\n        return config;\r\n    },\r\n    error => Promise.reject(error)\r\n);\r\n\r\n/**\r\n * Helper Method for moving a file/directory.\r\n * @param srcFs     {string}    remoteName of the source\r\n * @param srcRemote {string}    remotePath of the source\r\n * @param dstFs     {string}    remoteName of the destination\r\n * @param dstRemote {string}    remotePath of the destination\r\n * @param Name      {string}    name of the file/directory\r\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\r\n * @returns         {Promise<*>}\r\n */\r\nexport function performMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\r\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'move');\r\n}\r\n\r\n/**\r\n * Helper Method for copying a file/directory.\r\n * @param srcFs     {string}    remoteName of the source\r\n * @param srcRemote {string}    remotePath of the source\r\n * @param dstFs     {string}    remoteName of the destination\r\n * @param dstRemote {string}    remotePath of the destination\r\n * @param Name      {string}    name of the file/directory\r\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\r\n * @returns         {Promise<*>}\r\n */\r\nexport function performCopyFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\r\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'copy');\r\n}\r\n\r\n/**\r\n * Perform the actual copying/ moving of a file/directory.\r\n * @access private\r\n * @param srcFs     {string}    remoteName of the source\r\n * @param srcRemote {string}    remotePath of the source\r\n * @param dstFs     {string}    remoteName of the destination\r\n * @param dstRemote {string}    remotePath of the destination\r\n * @param Name      {string}    name of the file/directory\r\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\r\n * @param mode      {string}    Determines whether to copy or move. Allowed values: \"copy\", \"move\".\r\n * @returns         {Promise<AxiosResponse<T>>}\r\n */\r\nasync function performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, mode) {\r\n    let url = \"\";\r\n    if (mode === \"move\") {\r\n        if (IsDir) {\r\n            url = urls.moveDir;\r\n        } else {\r\n            url = urls.moveFile;\r\n        }\r\n    } else {\r\n        if (IsDir) {\r\n            url = urls.copyDir;\r\n        } else {\r\n            url = urls.copyFile;\r\n        }\r\n    }\r\n\r\n    if (isLocalRemoteName(srcFs)) {\r\n        srcFs = \"\";\r\n    }\r\n\r\n    if (isLocalRemoteName(dstFs)) {\r\n        dstFs = \"\";\r\n    }\r\n\r\n    let data = {\r\n        _async: true\r\n    };\r\n\r\n\r\n    if (IsDir) {\r\n\r\n        const splitRes = srcRemote.split('/');\r\n\r\n        data = {\r\n            ...data,\r\n            srcFs: srcFs + srcRemote,\r\n            dstFs: dstFs + dstRemote + \"/\" + splitRes[splitRes.length - 1],\r\n        };\r\n        console.log(\"DirOp:\", data);\r\n        return await axiosInstance.post(url, data);\r\n\r\n    } else {\r\n        if (dstRemote === \"\") {\r\n            dstRemote = Name;\r\n        } else {\r\n            dstRemote += \"/\" + Name;\r\n        }\r\n\r\n        data = {\r\n            ...data,\r\n            srcFs: srcFs,\r\n            srcRemote: srcRemote,\r\n            dstFs: dstFs,\r\n            dstRemote: dstRemote,\r\n        };\r\n        return await axiosInstance.post(url, data);\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default axiosInstance;\r\n"],"sourceRoot":""}